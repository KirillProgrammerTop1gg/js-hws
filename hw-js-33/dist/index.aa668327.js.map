{"mappings":"AEAA,MAAM,EAAQ,AAAA,GAAM,IAAI,QAAQ,CAAC,EAAS,IAAW,WAAW,IAAM,EAAQ,GAAK,IAE7E,EAAS,AAAA,GAAQ,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,EAAK,EAAE,CAAC,EAE7D,EAAM,KAAM,IAAI,CAAC,GACjB,EAAM,KAAM,IAAI,CAAC,GACjB,EAAM,MAAM,IAAI,CAAC,GAEjB,MAAM,EAAQ,CACZ,CAAE,KAAM,QAAS,OAAQ,CAAA,CAAK,EAC9B,CAAE,KAAM,OAAQ,OAAQ,CAAA,CAAM,EAC9B,CAAE,KAAM,OAAQ,OAAQ,CAAA,CAAK,EAC7B,CAAE,KAAM,MAAO,OAAQ,CAAA,CAAM,EAC9B,CAGK,EAAkB,CAAC,EAAU,IAAa,IAAI,QAAQ,AAAA,GAAW,EAAQ,aAAe,EAAS,GAAG,CAAC,AAAA,GACvG,EAAK,IAAI,GAAK,EAAW,CAAE,GAAG,CAAI,CAAE,OAAQ,CAAC,EAAK,MAAM,AAAC,EAAI,KAG3D,EAAU,AAAA,GAAgB,QAAQ,KAAK,CAAC,GAE9C,EAAgB,EAAO,SAAS,IAAI,CAAC,GACrC,EAAgB,EAAO,OAAO,IAAI,CAAC,GAEnC,MAAM,EAA4B,CAAC,EAAK,IAC/B,KAAK,KAAK,CAAC,KAAK,MAAM,GAAM,CAAA,EAAM,EAAM,CAAA,EAAK,GAGhD,EAAkB,AAAC,GAAgB,IAAI,QAAQ,CAAC,EAAS,KAC3D,IAAM,EAAQ,EAA0B,IAAK,KAC7C,QAAQ,GAAG,CAAC,GAEZ,WAAW,KACY,KAAK,MAAM,GAAK,GAGjC,EAAQ,CAAC,EAAY,EAAE,CAAE,EAAM,EAE/B,EAAO,EAAY,EAAE,CAE3B,EAAG,EACP,GAEM,EAAa,AAAC,IAClB,QAAQ,GAAG,CAAC,CAAC,YAAY,EAAE,CAAI,CAAC,EAAE,CAAC,cAAc,EAAE,CAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAChE,EAEM,EAAW,AAAA,IACf,QAAQ,IAAI,CAAC,CAAC,6BAA6B,EAAE,EAAG,yBAAyB,CAAC,CAC5E,EAEA,EAAgB,CAAE,GAAI,GAAI,OAAQ,GAAI,GACnC,IAAI,CAAC,GACL,KAAK,CAAC,GAET,EAAgB,CAAE,GAAI,GAAI,OAAQ,GAAI,GACnC,IAAI,CAAC,GACL,KAAK,CAAC,GAET,EAAgB,CAAE,GAAI,GAAI,OAAQ,EAAG,GAClC,IAAI,CAAC,GACL,KAAK,CAAC,GAET,EAAgB,CAAE,GAAI,GAAI,OAAQ,GAAI,GACnC,IAAI,CAAC,GACL,KAAK,CAAC","sources":["<anon>","src/index.js","src/js/main.js"],"sourcesContent":["const $54b47fc030b7b21e$var$delay = (ms)=>new Promise((resolve, reject)=>setTimeout(()=>resolve(ms), ms));\nconst $54b47fc030b7b21e$var$logger = (time)=>console.log(`Resolved after ${time}ms`);\n$54b47fc030b7b21e$var$delay(2000).then($54b47fc030b7b21e$var$logger);\n$54b47fc030b7b21e$var$delay(1000).then($54b47fc030b7b21e$var$logger);\n$54b47fc030b7b21e$var$delay(1500).then($54b47fc030b7b21e$var$logger);\nconst $54b47fc030b7b21e$var$users = [\n    {\n        name: \"Mango\",\n        active: true\n    },\n    {\n        name: \"Poly\",\n        active: false\n    },\n    {\n        name: \"Ajax\",\n        active: true\n    },\n    {\n        name: \"Lux\",\n        active: false\n    }\n];\nconst $54b47fc030b7b21e$var$toggleUserState = (allUsers, userName)=>new Promise((resolve)=>resolve(updatedUsers = allUsers.map((user)=>user.name === userName ? {\n                ...user,\n                active: !user.active\n            } : user)));\nconst $54b47fc030b7b21e$var$logger2 = (updatedUsers1)=>console.table(updatedUsers1);\n$54b47fc030b7b21e$var$toggleUserState($54b47fc030b7b21e$var$users, \"Mango\").then($54b47fc030b7b21e$var$logger2);\n$54b47fc030b7b21e$var$toggleUserState($54b47fc030b7b21e$var$users, \"Lux\").then($54b47fc030b7b21e$var$logger2);\nconst $54b47fc030b7b21e$var$randomIntegerFromInterval = (min, max)=>{\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nconst $54b47fc030b7b21e$var$makeTransaction = (transaction)=>new Promise((resolve, reject)=>{\n        const delay = $54b47fc030b7b21e$var$randomIntegerFromInterval(200, 500);\n        console.log(delay);\n        setTimeout(()=>{\n            const canProcess = Math.random() > 0.3;\n            if (canProcess) resolve([\n                transaction.id,\n                delay\n            ]);\n            else reject(transaction.id);\n        }, delay);\n    });\nconst $54b47fc030b7b21e$var$logSuccess = (data)=>{\n    console.log(`Transaction ${data[0]} processed in ${data[1]}ms`);\n};\nconst $54b47fc030b7b21e$var$logError = (id)=>{\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n$54b47fc030b7b21e$var$makeTransaction({\n    id: 70,\n    amount: 150\n}).then($54b47fc030b7b21e$var$logSuccess).catch($54b47fc030b7b21e$var$logError);\n$54b47fc030b7b21e$var$makeTransaction({\n    id: 71,\n    amount: 230\n}).then($54b47fc030b7b21e$var$logSuccess).catch($54b47fc030b7b21e$var$logError);\n$54b47fc030b7b21e$var$makeTransaction({\n    id: 72,\n    amount: 75\n}).then($54b47fc030b7b21e$var$logSuccess).catch($54b47fc030b7b21e$var$logError);\n$54b47fc030b7b21e$var$makeTransaction({\n    id: 73,\n    amount: 100\n}).then($54b47fc030b7b21e$var$logSuccess).catch($54b47fc030b7b21e$var$logError);\n\n\n\n\n//# sourceMappingURL=index.aa668327.js.map\n","import './js/main.js'","const delay = ms => new Promise((resolve, reject) => setTimeout(() => resolve(ms), ms));\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\ndelay(2000).then(logger);\r\ndelay(1000).then(logger);\r\ndelay(1500).then(logger);\r\n\r\nconst users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\n\r\nconst toggleUserState = (allUsers, userName) => new Promise(resolve => resolve(updatedUsers = allUsers.map(user =>\r\n    user.name === userName ? { ...user, active: !user.active } : user,\r\n)));\r\n\r\nconst logger2 = updatedUsers => console.table(updatedUsers);\r\n\r\ntoggleUserState(users, 'Mango').then(logger2);\r\ntoggleUserState(users, 'Lux').then(logger2);\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction) => new Promise((resolve, reject) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n    console.log(delay)\r\n\r\n    setTimeout(() => {\r\n        const canProcess = Math.random() > 0.3;\r\n\r\n        if (canProcess) {\r\n          resolve([transaction.id, delay]);\r\n        } else {\r\n          reject(transaction.id);\r\n        }\r\n    }, delay);\r\n});\r\n\r\nconst logSuccess = (data) => {\r\n  console.log(`Transaction ${data[0]} processed in ${data[1]}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\nmakeTransaction({ id: 70, amount: 150 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 })\r\n  .then(logSuccess)\r\n  .catch(logError);"],"names":["$54b47fc030b7b21e$var$delay","ms","Promise","resolve","reject","setTimeout","$54b47fc030b7b21e$var$logger","time","console","log","then","$54b47fc030b7b21e$var$users","name","active","$54b47fc030b7b21e$var$toggleUserState","allUsers","userName","updatedUsers","map","user","$54b47fc030b7b21e$var$logger2","updatedUsers1","table","$54b47fc030b7b21e$var$randomIntegerFromInterval","min","max","Math","floor","random","$54b47fc030b7b21e$var$makeTransaction","transaction","delay","id","$54b47fc030b7b21e$var$logSuccess","data","$54b47fc030b7b21e$var$logError","warn","amount","catch"],"version":3,"file":"index.aa668327.js.map"}